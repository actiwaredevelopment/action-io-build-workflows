name: Publish to github docker

on:
    workflow_call:
        inputs:
            artifact: # id of input
                description: 'The name of the artifact'
                required: false
                type: string
                default: ''
            use-cache:
                description: 'Indication whether the cache should be used instead of artifacts'
                required: false
                type: boolean
                default: false
            cache-path:
                description: 'Indication whether the cache should be used instead of artifacts'
                required: false
                type: string
                default: ${{ github.workspace }}
            image-name:
                description: 'The name of the docker image'
                required: true
                type: string
                default: ''
            image-tag:
                description: 'The name of the tag for the docker image'
                required: false
                type: string
                default: 'developer'
            dockerfile:
                description: 'The name of the tag that should be removed'
                required: false
                type: string
                default: 'dockerfile'

        secrets:
            token:
                required: true

jobs:
    docker:
        name: publish to github docker
        runs-on: ubuntu-latest

        steps:
            - name: 'Download Artifact'
              if: inputs.use-cache == false
              uses: actions/download-artifact@v4.1.7
              with:
                  name: ${{ inputs.artifact }}

            - name: 'Download from cache'
              if: inputs.use-cache == true
              uses: actions/cache/restore@v3
              with:
                  key: ${{ inputs.artifact }}
                  restore-keys: ${{ inputs.artifact }}
                  path: |
                      ${{ inputs.cache-path }}
                  fail-on-cache-miss: true
                  enableCrossOsArchive: true

            - name: Display structure of downloaded files
              run: ls -a

            - name: 'Build and Publish Docker Image'
              uses: matootie/github-docker@v3.1.0
              with:
                  # GitHub Repository Token to log in using.
                  accessToken: ${{ secrets.token }}
                  # The desired name for the image. Defaults to current repository name.
                  imageName: ${{ inputs.image-name }}
                  # The desired tag for the image. Defaults to latest. Optionally accepts multiple tags separated by newline.
                  tag: ${{ inputs.image-tag }}
                  # Where should GitHub Docker find the Dockerfile, relative to the root of the repository.
                  # context:
                  # What Dockerfile should GitHub Docker be using when building. Defaults to traditional Dockerfile name.
                  contextName: ${{ inputs.dockerfile }}
